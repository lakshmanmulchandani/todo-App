{"version":3,"sources":["Todo3.jsx","Header.jsx","App.js","index.js"],"names":["getLocalItems","list","localStorage","getItem","JSON","parse","getLocalItemsdesc","listdesc","Todo3","useState","input","setInput","inputdesc","setInputdesc","item","setItem","itemdesc","setItemdesc","useEffect","stringify","className","label","value","placeholder","onChange","event","target","variant","fullWidth","color","type","multiline","rows","Button","onClick","prevValue","style","height","width","boxShadow","TableContainer","Table","TableHead","TableRow","fontWeight","TableCell","size","TableBody","map","todo","id","whiteSpace","wordWrap","overflow","updatedItems","filter","elem","ind","updatedItemsdesc","deleteItem","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fae2495.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Textfield from \"@material-ui/core/Textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// This function is to get value of todolist titles from todolist(array in local storage)\r\nconst getLocalItems = () => {\r\n  let list = localStorage.getItem(\"todolist\");\r\n\r\n  if (list) return JSON.parse(list);\r\n  else {\r\n    return [];\r\n  }\r\n};\r\n\r\n// This function is to get value of todolistdesc titles from todolistdesc(array in local storage)\r\nconst getLocalItemsdesc = () => {\r\n  let listdesc = localStorage.getItem(\"todolistdesc\");\r\n\r\n  if (listdesc) return JSON.parse(listdesc);\r\n  else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo3 = () => {\r\n  // Input from input field is taken into these hooks (for title)\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // Input from input field is taken into these hooks (for desc)\r\n  const [inputdesc, setInputdesc] = useState(\"\");\r\n\r\n  // Each Input is stored in an array here,that input is sent to local storage through setItem and later we get that using getItem\r\n  const [item, setItem] = useState(getLocalItems);\r\n  const [itemdesc, setItemdesc] = useState(getLocalItemsdesc);\r\n\r\n  // Use Effect hook is used so that these functions execute after every time something renders or here when add is clicked\r\n  useEffect(() => {\r\n    // creating a file named todolist and todolistdesc in local storage and adding value of item and itemdesc\r\n    localStorage.setItem(\"todolist\", JSON.stringify(item));\r\n    localStorage.setItem(\"todolistdesc\", JSON.stringify(itemdesc));\r\n  }, [item]);\r\n\r\n  const addItem = () => {\r\n    // when addItem is called new input taken is added into array of items,spread operator ensures that old input remains as it is while new input is entered\r\n    setItem((prevValue) => {\r\n      return [...prevValue, input];\r\n    });\r\n    setItemdesc((prevValue) => {\r\n      return [...prevValue, inputdesc];\r\n    });\r\n\r\n    //   to reset the input fields after adding the previously entered value in items\r\n    setInput(\"\");\r\n    setInputdesc(\"\");\r\n  };\r\n\r\n  const inputItem = (event) => {\r\n    // taking data from input field and setting into input variable\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  // taking data from input desc field and setting into inputdesc variable\r\n  const inputItemdesc = (event) => {\r\n    setInputdesc(event.target.value);\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    // Using Filter method to reset the item field and remove the deleted data\r\n    const updatedItems = item.filter((elem, ind) => {\r\n      return ind !== id;\r\n    });\r\n\r\n    const updatedItemsdesc = itemdesc.filter((elem, ind) => {\r\n      return ind !== id;\r\n    });\r\n\r\n    setItem(updatedItems);\r\n    setItemdesc(updatedItemsdesc);\r\n  };\r\n  const task = () => {\r\n    return item.map((todo, id) => {\r\n      return (\r\n        <>\r\n          <TableRow>\r\n            <TableCell> {id + 1} </TableCell>\r\n            <TableCell> {todo}</TableCell>\r\n            <TableCell\r\n              style={{\r\n                whiteSpace: \"normal\",\r\n                wordWrap: \"break-word\",\r\n                overflow: \"hidden\",\r\n              }}>\r\n              {\" \"}\r\n              {itemdesc[id]}\r\n            </TableCell>\r\n\r\n            <TableCell>\r\n              {\" \"}\r\n              <Button\r\n                className='trash'\r\n                onClick={() => deleteItem(id)}\r\n                style={{\r\n                  color: \"green\",\r\n                  height: \"55px\",\r\n                  width: \"90px\",\r\n                  boxShadow: \"\",\r\n                }}\r\n                variant='contained'>\r\n                {\" \"}\r\n                Done <DoneIcon />\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  const clean = () => {\r\n    setItemdesc([]);\r\n    setItem([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='todo-block'>\r\n        <div className='todo'>\r\n          <div className='screen'>\r\n            <div className='input-title'>\r\n              <Textfield\r\n                label='Title'\r\n                aria-label=' '\r\n                value={input}\r\n                placeholder='Add item here'\r\n                onChange={inputItem}\r\n                className='input'\r\n                variant='outlined'\r\n                fullWidth\r\n                color='yellow'\r\n              />\r\n            </div>\r\n\r\n            <div className='input-desc'>\r\n              {\" \"}\r\n              <Textfield\r\n                label='Description'\r\n                value={inputdesc}\r\n                type='text'\r\n                placeholder='Add item desc here'\r\n                onChange={inputItemdesc}\r\n                variant='outlined'\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n              />{\" \"}\r\n            </div>\r\n\r\n            <div className='add'>\r\n              {\" \"}\r\n              <Button\r\n                onClick={addItem}\r\n                style={{\r\n                  color: \"green\",\r\n                  height: \"45px\",\r\n                  width: \"110px\",\r\n                  boxShadow: \"1px 1px 1px 1px\",\r\n                }}\r\n                variant='outlined'>\r\n                {\" \"}\r\n                <div className='add'> Add Item</div>\r\n              </Button>{\" \"}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='todo-list'>\r\n            {\" \"}\r\n            <div className='todo-items'>\r\n              <TableContainer>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow style={{fontWeight: \"bolder\"}}>\r\n                      <TableCell style={{fontWeight: \"bolder\"}} size='small'>\r\n                        S.No.\r\n                      </TableCell>\r\n                      <TableCell style={{fontWeight: \"bolder\"}}>Item</TableCell>\r\n                      <TableCell style={{fontWeight: \"bolder\", width: \"70%\"}}>\r\n                        Item Description\r\n                      </TableCell>\r\n                      <TableCell style={{fontWeight: \"bolder\"}}>\r\n                        Action\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{task()}</TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div className='trash'>\r\n              <Button\r\n                onClick={clean}\r\n                style={{\r\n                  color: \"green\",\r\n                  height: \"45px\",\r\n                  width: \"110px\",\r\n                  boxShadow: \"1px 1px 1px 1px\",\r\n                }}\r\n                variant='outlined'>\r\n                Clear all\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo3;\r\n","import React from 'react'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n        <div className=\"header-todo\">\r\n            <h2 >Laksh's TODO</h2>\r\n            <div className=\"icons\">  </div>\r\n\r\n        </div>\r\n        <div className=\"head\"> My TODO List </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import \"./App.css\";\n// import Todo from \"./Todo\";\n// import Todo2 from \"./Todo2\";\nimport Todo3 from \"./Todo3\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Todo3 />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}